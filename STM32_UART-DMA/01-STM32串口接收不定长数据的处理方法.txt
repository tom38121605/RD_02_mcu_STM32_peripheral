STM32串口接收不定长数据的处理策略通常依赖于空闲中断和DMA。串口通信中，数据传输的长度是不确定的，这就要求我们设计一种机制来确保数据完整接收。以下是三种常见的处理方法：

1. 固定格式：通过约定数据包的起始和结束标志，如AA BB和BB AA，接收端在接收到这些标志后，就可以确定数据包的边界，从而存储接收到的数据。

2. 接收中断+超时判断：串口接收到数据会触发接收中断。通过设置一个计时器，如果在预设时间内没有接收到新的数据，就认为一帧数据接收完成。

3. 空闲中断：当串口空闲时，即没有数据接收，就会触发空闲中断。这与超时判断类似，只是空闲中断是硬件自动处理的。


__HAL_UART_ENABLE_IT(&huart1, UART_IT_IDLE);                // 使能idle中断
HAL_UART_Receive_DMA(&huart1, Rx_Buf, BUFFER_SIZE);    // 打开DMA接收

打开空闲中断：    CR1.IDLECE     //bit4
空闲中断的标志： ISR.IDLE         //bit4



